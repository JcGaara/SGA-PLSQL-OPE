CREATE OR REPLACE PACKAGE BODY OPERACION.PKG_EF_COSTEO_FORMULA IS

  FUNCTION SGAFUN_002_IMPEXPEDGESMUN(K_PERM_MUNI    PLS_INTEGER,
                                     K_CANALIZA1    NUMBER,
                                     K_CANALIZA2    NUMBER,
                                     K_CAMARA       NUMBER,
                                     K_ZONA_LIMA    PLS_INTEGER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
     IF K_PERM_MUNI = 1 THEN
        IF (K_CANALIZA1 > 0 OR K_CANALIZA2 > 0 OR K_CAMARA > 0) THEN
           IF (K_ZONA_LIMA = 1) THEN
              C_CANTIDAD := 3;
           ELSE
              C_CANTIDAD := 5;
           END IF;
        ELSE
           C_CANTIDAD := 0;
        END IF;
     ELSE
        C_CANTIDAD := 0;
     END IF;
 
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_003_PLANSENALDESVIO( K_PERM_MUNI    PLS_INTEGER,
                                       K_CANALIZA1    NUMBER,
                                       K_CANALIZA2    NUMBER,
                                       K_CAMARA       NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
     IF K_PERM_MUNI = 1 AND (K_CANALIZA1 > 0 OR K_CANALIZA2 > 0 OR K_CAMARA > 0) THEN
        C_CANTIDAD := 1;
     ELSE
        C_CANTIDAD := 0;
     END IF;
     
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_004_POSTEACTIVIDAD(K_POSTEP       NUMBER)
  RETURN NUMBER IS
  BEGIN     
     RETURN K_POSTEP;
  END;
  
  FUNCTION SGAFUN_005_FIBREDAERCANAL(K_TENDIDOA    NUMBER,
                               K_TENDIDOC    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
     C_CANTIDAD := K_TENDIDOA + K_TENDIDOC;
     
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_006_CABLEFIBROPTIPROY(K_TENDIDOA    NUMBER,
                                        K_TENDIDOC    NUMBER,
                                        K_INPUT       NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CONSTANTE   NUMBER:= 1.2;
  BEGIN
     C_CANTIDAD := C_CONSTANTE * SGAFUN_005_FIBREDAERCANAL(K_TENDIDOA, K_TENDIDOC) + SGAFUN_013_MATINPUT(K_INPUT);
     
     RETURN C_CANTIDAD;
  END;
  
  FUNCTION SGAFUN_007_OTROSTENDIDO(K_TENDIDOA    NUMBER,
                                   K_TENDIDOC    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CONSTANTE   NUMBER:= 100;
  BEGIN
     C_CANTIDAD := ROUND((K_TENDIDOC + SGAFUN_005_FIBREDAERCANAL(K_TENDIDOA, K_TENDIDOC)) / C_CONSTANTE, 0);
     
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_008_POSTEMATERIAL(K_POSTEP       NUMBER)
  RETURN NUMBER IS
  BEGIN     
     RETURN K_POSTEP;
  END;

  FUNCTION SGAFUN_009_MATPANDUITFUSION(K_PANDUIT    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_PANDUIT;
  END;
  
  FUNCTION SGAFUN_010_CABLEFIBROPT96FSM(K_TENDIDOA    NUMBER,
                                        K_TENDIDOC    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CONSTANTE   NUMBER:= 45;
  BEGIN
    IF SGAFUN_005_FIBREDAERCANAL(K_TENDIDOA, K_TENDIDOC) = 0 THEN
       C_CANTIDAD := 0;
    ELSE
       C_CANTIDAD := SGAFUN_005_FIBREDAERCANAL(K_TENDIDOA, K_TENDIDOC) + C_CONSTANTE;
    END IF;

     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_011_FIBREDAERCANAL96FSM(K_TENDIDOA    NUMBER,
                                          K_TENDIDOC    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
     C_CANTIDAD := K_TENDIDOA + K_TENDIDOC;
     
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_012_POSTEMPRELECTRICA(K_POSTET    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_POSTET;
  END;

  FUNCTION SGAFUN_013_MATINPUT(K_INPUT    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_INPUT;
  END;

  FUNCTION SGAFUN_014_PAGOMINCULTURA(K_PERMIN_CULTURA    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
     IF K_PERMIN_CULTURA = 1 THEN
        C_CANTIDAD := 1;
     ELSE
        C_CANTIDAD := 0;
     END IF;
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_015_PAGOGESTPERMISO(K_PERM_MUNI    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
     IF K_PERM_MUNI = 1 THEN
        C_CANTIDAD := 1;
     ELSE
        C_CANTIDAD := 0;
     END IF;
     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_016_CANAPROY1VIA(K_CANALIZA1    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_CANALIZA1;
  END;

  FUNCTION SGAFUN_017_CANAPROYMAS1VIA(K_CANALIZA2    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_CANALIZA2;
  END;
  
  FUNCTION SGAFUN_018_CAMARAPROYECTA(K_CAMARA    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_CAMARA;
  END;
  
  FUNCTION SGAFUN_019_OTROSCANA1VIA(K_CANALIZA1    NUMBER,
                                    K_CANALIZA2    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CONSTANTE   NUMBER:= 50;
  BEGIN
    IF K_CANALIZA1 = 0 THEN
       C_CANTIDAD := 0;
    ELSE
       IF K_CANALIZA2 > 0 THEN
          C_CANTIDAD := 0;
       ELSE
          C_CANTIDAD := ROUND((CEIL(K_CANALIZA1/C_CONSTANTE) * C_CONSTANTE) / C_CONSTANTE,0);
       END IF;
    END IF;

     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_020_OTROSCANAMAS1VIA(K_CANALIZA2    NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CONSTANTE   NUMBER:= 50;
  BEGIN
    IF K_CANALIZA2 = 0 THEN
       C_CANTIDAD := 0;
    ELSE
       C_CANTIDAD := ROUND((CEIL(K_CANALIZA2/C_CONSTANTE) * C_CONSTANTE) / C_CONSTANTE,0);
    END IF;

     RETURN C_CANTIDAD;
  END;
  
  FUNCTION SGAFUN_021_CANAL_MARCOTAPCAM(K_CAMARA    NUMBER)
  RETURN NUMBER IS
  BEGIN
     RETURN K_CAMARA;
  END;
  
  FUNCTION SGAFUN_022_LIQUIDAPERMISO(K_PERM_MUNI    PLS_INTEGER, 
                                     K_CANALIZA1    NUMBER,
                                     K_CANALIZA2    NUMBER,
                                     K_TENDIDOA     NUMBER,
                                     K_TENDIDOC     NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
    IF K_PERM_MUNI = 1 THEN
       IF (K_CANALIZA1 > 0 OR K_CANALIZA2 > 0 OR K_TENDIDOA > 0 OR K_TENDIDOC > 0) THEN
          C_CANTIDAD := 1;
       ELSE
          C_CANTIDAD := 0;
       END IF;
    ELSE
       C_CANTIDAD := 0;
    END IF;

     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_023_FLETE(K_LOCAL     PLS_INTEGER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
    IF K_LOCAL = 1 THEN
       C_CANTIDAD := 0;
    ELSE
       C_CANTIDAD := 1;
    END IF;

     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_024_PASAJE(K_LOCAL     PLS_INTEGER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CODIGO      PLS_INTEGER;
  C_MENSAJE     VARCHAR2(100);
  BEGIN
    IF K_LOCAL = 1 THEN
       C_CANTIDAD := 0;
    ELSE
       C_CANTIDAD := OPERACION.PKG_EF_COSTEO.SGAFUN_GET_PARAM_REGNEGO('ZONA_PROVINCIA', 'CANTIDAD_PERSONAL', C_CODIGO, C_MENSAJE);
    END IF;

     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_025_HOSPEDA_ALIMEN(K_LOCAL     PLS_INTEGER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  C_CANTPERS    NUMBER;
  C_DIAPERMA    NUMBER;
  C_CODIGO      PLS_INTEGER;
  C_MENSAJE     VARCHAR2(100);
  BEGIN
    IF K_LOCAL = 1 THEN
       C_CANTIDAD := 0;
    ELSE
      C_CANTPERS := OPERACION.PKG_EF_COSTEO.SGAFUN_GET_PARAM_REGNEGO('ZONA_PROVINCIA', 'CANTIDAD_PERSONAL', C_CODIGO, C_MENSAJE);
      C_DIAPERMA := OPERACION.PKG_EF_COSTEO.SGAFUN_GET_PARAM_REGNEGO('ZONA_PROVINCIA', 'DIAS_PERMANENCIA',  C_CODIGO, C_MENSAJE);
      C_CANTIDAD := C_CANTPERS * C_DIAPERMA;
    END IF;

     RETURN C_CANTIDAD;
  END;

  FUNCTION SGAFUN_026_MATFERINSTFOAEREA(K_TENDIDOA     NUMBER)
  RETURN NUMBER IS
  C_CANTIDAD    OPERACION.SGAT_EF_ETAPA_CNFG.EFECN_CANTIDAD%TYPE;
  BEGIN
    IF K_TENDIDOA > 0 THEN
       C_CANTIDAD := K_TENDIDOA;
    ELSE
       C_CANTIDAD := 0;
    END IF;

     RETURN C_CANTIDAD;
  END;
END PKG_EF_COSTEO_FORMULA;
/